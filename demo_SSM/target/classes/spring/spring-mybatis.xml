<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">  
  
  
	   <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
	      init-method="init" destroy-method="close"> 
		  <property name="driverClassName" value="${jdbc.driver}" /> 
		  <property name="url" value="${jdbc.url}" /> 
		  <property name="username" value="${jdbc.username}" /> 
		  <property name="password" value="${jdbc.password}" /> 
		  <!-- 配置初始化大小、最小、最大 --> 
		  <property name="initialSize" value="100" /> 
		  <property name="minIdle" value="100" /> 
		  <property name="maxActive" value="1000" />
		  <!-- 配置获取连接等待超时的时间 --> 
		  <property name="maxWait" value="10000" />
		  <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
		  <property name="timeBetweenEvictionRunsMillis" value="60000" />
		  <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
		  <property name="minEvictableIdleTimeMillis" value="300000" />
		  <property name="testWhileIdle" value="true" />
		  <!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
		  <property name="testOnBorrow" value="true" /> 
		  <property name="testOnReturn" value="false" />
		  <!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
		  <property name="poolPreparedStatements" value="true" /> 
		  <property name="maxPoolPreparedStatementPerConnectionSize" value="100" />
		  <!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
		  <property name="defaultAutoCommit" value="true" />
		  <!-- 验证连接有效与否的SQL，不同的数据配置不同 --> 
		  <property name="validationQuery" value="select 1 " /> 
		  <property name="filters" value="stat" /> 
		  <property name="proxyFilters"> 
		   <list> 
		    <ref bean="logFilter" /> 
		   </list> 
		  </property> 
	 </bean>
	 
	<bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter"> 
	 	<property name="statementExecutableSqlLogEnable" value="false" /> 
	</bean>
    
    
     <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
  	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
    	<property name="dataSource" ref="dataSource" ></property>
    	<!-- 自动扫描mapping.xml文件 -->
    	<property name="mapperLocations" value="classpath*:mapping/*Mapper.xml"></property>
  	</bean>
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.xlr.mybatis.IDao"></property>
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
  </bean>

    <!-- 配置事务管理器 -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
         <property name="dataSource" ref="dataSource" />  
    </bean>  
  
    <!-- 配置事务增强处理Bean，指定事务管理器 -->  
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
        <!-- 配置详细事务处理语义 -->  
        <tx:attributes>  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
  
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />  
            <tx:method name="load*" propagation="SUPPORTS" read-only="true" />  
  
            <!-- 其他采用默认事务方式 -->  
            <tx:method name="*" />  
  
        </tx:attributes>  
    </tx:advice>  
  
    <!-- Spring aop事务管理 -->  
    <aop:config>  
        <!-- 配置切入点 -->  
        <aop:pointcut id="transactionPointcut"  
            expression="execution(* com.xlr.demo.dao..*Impl.*(..))" />  
        <!-- 指定在txAdvice切入点应用txAdvice事务增强处理 -->  
        <aop:advisor pointcut-ref="transactionPointcut"  
            advice-ref="transactionAdvice" />  
    </aop:config>  
  
  <!-- 
  <bean id="mbServer" class="org.springframework.jmx.export.MBeanExporter">  
        <property name="autodetectModeName">  
            <value>AUTODETECT_ALL</value>  
        </property>  
    </bean>  
    <bean name="mydomain:myobj=MyObjectMBean" class="com.xlr.jmx.MyObject">  
        <property name="id">  
            <value>90000000001</value>  
        </property>  
        <property name="name">  
            <value>shirdrn</value>  
        </property>  
    </bean>  
   -->
  
</beans>  